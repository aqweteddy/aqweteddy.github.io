<?xml version="1.0" encoding="utf-8" standalone="yes" ?>



<?xml-stylesheet type="text/xsl" href="#stylesheet" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <xsl:stylesheet id="stylesheet" version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes="xsl">
    <xsl:output method="html" doctype-system="about:legacy-compat" />
    <xsl:template match="/rss">
      <html lang="zh-tw">
        <head>
          <meta name="viewport" content="width=device-width, initial-scale=1.0" />
          <title>Hugo RSS | Teddy&#39;s blog</title>
          <style>body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  line-height: 1.6;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
  border-radius: 0.2rem;
}

pre {
  overflow-x: auto;
  border: 0.1rem solid lightgray;
  padding: 1rem;
}

code {
  font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace;
}

.Banner {
  list-style: none;
  display: flex;
  flex-flow: row-reverse wrap-reverse;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}




.Banner-item:nth-child(1) {
  order: 4;
}



.Banner-item:nth-child(2) {
  order: 3;
}



.Banner-item:nth-child(3) {
  order: 2;
}



.Banner-item:nth-child(4) {
  order: 1;
}



.Banner-link {
  font-size: 1.25rem;
  color: white;
  padding: 0.5rem 1rem;
}

.Heading {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: baseline;
}

.Heading-title {
  margin: 1.5rem 0.5rem 0 0;
}

.Heading-link {
  color: inherit;
}

.Tags {
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 1.5rem 0;
  padding: 0;
}

.Tags-item {
  border-radius: 0.2rem;
  margin: 0.2rem;
  padding: 0 0.3rem;
}

.Tags-link {
  color: white;
}

.Pagination {
  font-size: 1.25rem;
  color: inherit;
}

.Pagination--right {
  float: right;
}

.Footer {
  text-align: center;
  margin: 1rem 0;
}

.u-expand {
  flex-grow: 1;
}

.u-wrapper {
  max-width: 42rem;
  margin: auto;
}

.u-padding {
  padding: 0 1rem;
}

.u-background {
  background: black;
}

.u-clickable {
  font-weight: bold;
  text-decoration: none;
  display: inline-block;
}</style>
        </head>
        <body>
          <nav class="u-background">
  <div class="u-wrapper">
    <ul class="Banner">
      <li class="Banner-item u-expand">
        <a class="Banner-link u-clickable" href="/">Teddy&#39;s blog</a>
      </li>
      
      <li class="Banner-item">
        <a class="Banner-link u-clickable" href="/about/">About</a>
      </li>
      
      <li class="Banner-item">
        <a class="Banner-link u-clickable" href="/posts/">Posts</a>
      </li>
      
      <li class="Banner-item">
        <a class="Banner-link u-clickable" href="/tags/">Tags</a>
      </li>
      
      <li class="Banner-item">
        <a class="Banner-link u-clickable" href="/categories/">Categories</a>
      </li>
      
    </ul>
  </div>
</nav>
          <main class="u-expand">
            <div class="u-wrapper">
              <div class="u-padding">
                <h2 class="Heading-title">
                  
                  <a class="Heading-link u-clickable" href="/posts/index.xml" rel="bookmark">Hugo RSS</a>
                  
                </h2>
                
                <p>
                  To subscribe to this RSS feed, copy its address and paste it into your favorite feed reader.
                </p>
                
              </div>
            </div>
          </main>
          
<footer class="Footer">
  <div class="u-wrapper">
    <div class="u-padding">
      <a href="http://creativecommons.org/licenses/by/4.0/" rel="license"> Creative Commons Attribution 4.0 International License</a>.
    </div>
  </div>
</footer>

        </body>
      </html>
    </xsl:template>
  </xsl:stylesheet>
  <channel>
    <title>Hugo on Teddy&#39;s blog</title>
    <link>https://aqweteddy.github.io/posts/</link>
    <description>Recent content in Hugo on Teddy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 21 Feb 2019 15:02:34 +0800</lastBuildDate>
    <atom:link href="https://aqweteddy.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>名詞</title>
      <link>https://aqweteddy.github.io/posts/technical_term/</link>
      <pubDate>Sun, 20 Jan 2019 13:06:27 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/technical_term/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;紀錄專有名詞&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;名詞解釋&#34;&gt;名詞解釋&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;詞向量：將 word 轉為 vector&lt;/li&gt;
&lt;li&gt;句向量：&lt;/li&gt;
&lt;li&gt;卷積神經網路(CNNs)：處理矩陣輸入任務，將高維度矩陣轉為一維向量，並保留有用訊息，注重全局的模糊感知&lt;/li&gt;
&lt;li&gt;循環神經網路(RNNs)：與CNN作用相同，但是注重鄰近位置重構(鄰近位置信息的整合)

&lt;ul&gt;
&lt;li&gt;LSTM:&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://kexue.fm/usr/uploads/2015/08/2067741257.png&#34; alt=&#34;LSTM Model&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Word2vec</title>
      <link>https://aqweteddy.github.io/posts/word2vec/</link>
      <pubDate>Sun, 20 Jan 2019 16:59:48 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/word2vec/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;將文字轉成向量&lt;/li&gt;
&lt;li&gt;不論語言&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;安裝方法&#34;&gt;安裝方法&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install gensim
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用方法&#34;&gt;使用方法&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;model = Word2Vec(output, window=5, min_count=5, size=300,
                 sg=0, workers=3, hs=1, iter=5)
model.save(&#39;models/ptt_text.model&#39;) # save model
model = Word2Vec.load(&#39;word2vec.model&#39;) # load model
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;output: 斷詞後的語料 (2D Array)&lt;/li&gt;
&lt;li&gt;參數:

&lt;ul&gt;
&lt;li&gt;iter=5：訓練的回數，訓練過少會使得詞關係過為鬆散，訓練過度又會使得詞關係過為極&lt;/li&gt;
&lt;li&gt;size=100：詞向量的維度大小，維度太小會無法有效表達詞與詞的關係，維度太大會使關係太稀疏而難以找出規則&lt;/li&gt;
&lt;li&gt;verbose = True 是會印出 word2vec 執行的詳細狀況&lt;/li&gt;
&lt;li&gt;alpha:機器學習中的學習率，這東西會逐漸收斂到 min_alpha&lt;/li&gt;
&lt;li&gt;sg:sg=1表示採用skip-gram,sg=0 表示採用cbow&lt;/li&gt;
&lt;li&gt;window:能往左往右看幾個字&lt;/li&gt;
&lt;li&gt;workers:執行緒數目，建議別超過 4&lt;/li&gt;
&lt;li&gt;min_count:若這個詞出現的次數小於min_count，那他就不會被視為訓練對象&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;查詢&#34;&gt;查詢&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;model.similarity(word2,word1) # 兩字的相似度
model[word] # word 的向量
model.most_similar([word, ... ], topn=N) # 最有關前 Ｎ 字
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>情緒分析</title>
      <link>https://aqweteddy.github.io/posts/sentiment_anlysis/</link>
      <pubDate>Sat, 02 Feb 2019 19:42:16 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/sentiment_anlysis/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;以 keras 建置 LSTM 模型做文字二元分類&lt;/li&gt;
&lt;li&gt;data-set 來源：ptt&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;github-code&#34;&gt;Github Code&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aqweteddy/PttSentimentAnalyse&#34;&gt;https://github.com/aqweteddy/PttSentimentAnalyse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;目標&#34;&gt;目標&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;輸入推文內容，回傳可能是「推」或「噓」&lt;/li&gt;
&lt;li&gt;輸入文章內容，判斷分類是否為「問卦」&lt;/li&gt;
&lt;li&gt;使用&lt;a href=&#34;https://github.com/aqweteddy/PttScrapyMongoDB&#34;&gt;這個Repo&lt;/a&gt;爬取資料&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;方法&#34;&gt;方法&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;將字串切割 (jieba)&lt;/li&gt;
&lt;li&gt;以 &lt;a href=&#34;https://aqweteddy.github.io/nlp/word2vec&#34;&gt;Word2Vec&lt;/a&gt; 將單字轉為向量xw，再組成矩陣&lt;/li&gt;
&lt;li&gt;創建句子對應的id&lt;/li&gt;
&lt;li&gt;以 Keras train model&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;training-set&#34;&gt;Training Set&lt;/h3&gt;

&lt;h4 id=&#34;set1&#34;&gt;Set1&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;取得資料庫中所有文章&lt;/li&gt;
&lt;li&gt;分為「問卦」或「非問卦」兩種&lt;/li&gt;
&lt;li&gt;name: &lt;code&gt;ptt_cut_text.txt&lt;/code&gt; &lt;code&gt;models/ptt_text_w2v.model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;set2&#34;&gt;Set2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;取得 &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt; 前推噓文&lt;/li&gt;
&lt;li&gt;去除不推不噓，並隨機抽取1/3的「推」作為樣本，噓全取&lt;/li&gt;
&lt;li&gt;推: 27837 噓: 18564&lt;/li&gt;
&lt;li&gt;name: &lt;code&gt;ptt_cut_comment_tag.txt&lt;/code&gt; &lt;code&gt;models/ptt_push.model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;結果&#34;&gt;結果&lt;/h3&gt;

&lt;h3 id=&#34;training-set-1&#34;&gt;Training Set 1&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;epoch = 2, stop_words=true, embedding_size=100, window=4, embedding_weight=True&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;model code:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = Sequential()
model.add(Embedding(
        output_dim=EMBEDDING_WEIGHT_SIZE,
        input_dim=len(self.w2id) + 1,
        mask_zero=True,
        weights=[self.weight],
        input_length=self.maxlen))
model.add(LSTM(output_dim=50, activation=&#39;sigmoid&#39;))
model.add(Dropout(0.4))
model.add(Dense(1))
model.add(Activation(&#39;sigmoid&#39;))

model.compile(loss=&#39;binary_crossentropy&#39;,
    optimizer=&#39;adam&#39;,metrics=[&#39;accuracy&#39;])
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;accuracy: 0.91&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;training-set2&#34;&gt;Training Set2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;epoch = 1, stop_words = false, size = 300, window = 5:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;accuracy: 0.73&lt;/li&gt;
&lt;li&gt;name: &lt;code&gt;ptt_sentiment_v1.model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;epoch = 2, stop_words = false, size = 100, window = 5:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;accuracy: 0.72&lt;/li&gt;
&lt;li&gt;name: &lt;code&gt;ptt_sentiment_v2.model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;epoch = 1, stop_words = true, size = 300, window = 5:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;accuracy: 0.76&lt;/li&gt;
&lt;li&gt;name: &lt;code&gt;ptt_sentiment_v3.model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;epoch = 1, stop_words = true, size = 300, window = 3:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;accuracy: 0.74&lt;/li&gt;
&lt;li&gt;name: &lt;code&gt;ptt_sentiment_v4.model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;參考資料&#34;&gt;參考資料&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/fba7df3a76fa&#34;&gt;https://www.jianshu.com/p/fba7df3a76fa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kexue.fm/archives/3863&#34;&gt;https://kexue.fm/archives/3863&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Course</title>
      <link>https://aqweteddy.github.io/posts/course/</link>
      <pubDate>Wed, 27 Feb 2019 01:06:48 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/course/</guid>
      <description>

&lt;hr /&gt;

&lt;h3 id=&#34;說明&#34;&gt;說明&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;這是各學期在中正資工上課所保留下來的 Code&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;大一上&#34;&gt;大一上&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aqweteddy/ProgreamDesign-1&#34;&gt;程式設計(一)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;大一下&#34;&gt;大一下&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aqweteddy/OOP&#34;&gt;物件導向程式設計&lt;/a&gt; 大二下必修&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aqweteddy/ProgramDesign-2&#34;&gt;程式設計(二)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;大二上&#34;&gt;大二上&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aqweteddy/AssemblyLanguage&#34;&gt;組合語言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aqweteddy/DataStructure&#34;&gt;資料結構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Install</title>
      <link>https://aqweteddy.github.io/posts/hugo_install/</link>
      <pubDate>Thu, 21 Feb 2019 15:37:19 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/hugo_install/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;安裝 Hugo&lt;/li&gt;
&lt;li&gt;Hugo 基本指令&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h3&gt;

&lt;h4 id=&#34;environment&#34;&gt;Environment&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;OS: MAC OS Mojave&lt;/li&gt;
&lt;li&gt;Package Manager: brew&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;step&#34;&gt;Step&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;brew install hugo&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;create-new-blog&#34;&gt;Create new blog&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hugo new site [blog_name]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;create-new-article&#34;&gt;Create new article&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hugo new [path][page_name]&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;create &lt;code&gt;.md&lt;/code&gt; in &lt;code&gt;[path_to_project]/content&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;run-server&#34;&gt;Run server&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;github-page&#34;&gt;github Page&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;create a new empty project in github.&lt;/li&gt;
&lt;li&gt;use command &lt;code&gt;hugo&lt;/code&gt; to save result in &lt;code&gt;[proj]/public&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;do following command:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public
git init
git add .
git commit -m &amp;quot;first&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Highlight Hugo Code</title>
      <link>https://aqweteddy.github.io/posts/env/</link>
      <pubDate>Thu, 21 Feb 2019 13:38:15 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/env/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;add highlight to Hugo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;step&#34;&gt;Step&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;add behind code into &lt;code&gt;config.toml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-config&#34;&gt;# use Chroma for syntax highlight
pygmentsCodeFences = true
pygmentsCodefencesGuessSyntax = true
pygmentsStyle = &amp;quot;vim&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;code-highlight-example&#34;&gt;Code Highlight Example&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main()
{
    cout &amp;lt;&amp;lt; 123 &amp;lt;&amp;lt; &#39;\n&#39;;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>set env on Ubuntu</title>
      <link>https://aqweteddy.github.io/posts/ubuntu_env/</link>
      <pubDate>Thu, 21 Feb 2019 13:16:27 +0800</pubDate>
      <guid>https://aqweteddy.github.io/posts/ubuntu_env/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;set environment on Ubuntu&lt;/li&gt;
&lt;li&gt;zsh

&lt;ul&gt;
&lt;li&gt;syntax-highlight powerlevel9k auto-suggestions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;.vimrc&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-zsh&#34;&gt;install zsh&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install zsh
sudo apt-get install git
chsh -s /bin/zsh
sh -c &amp;quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&amp;quot;
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;zshrc&#34;&gt;.zshrc&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;POWERLEVEL9K_MODE=&#39;nerdfont-complete&#39;
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to &amp;quot;random&amp;quot;
# it&#39;ll load a random theme each time that oh-my-zsh is loaded.

ZSH_THEME=&amp;quot;powerlevel9k/powerlevel9k&amp;quot;
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( &amp;quot;robbyrussell&amp;quot; &amp;quot;agnoster&amp;quot; )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE=&amp;quot;true&amp;quot;

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE=&amp;quot;true&amp;quot;

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE=&amp;quot;true&amp;quot;

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS=&amp;quot;true&amp;quot;

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE=&amp;quot;true&amp;quot;

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION=&amp;quot;true&amp;quot;

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS=&amp;quot;true&amp;quot;

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY=&amp;quot;true&amp;quot;

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: &amp;quot;mm/dd/yyyy&amp;quot;|&amp;quot;dd.mm.yyyy&amp;quot;|&amp;quot;yyyy-mm-dd&amp;quot;
# HIST_STAMPS=&amp;quot;mm/dd/yyyy&amp;quot;

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
# User configuration

# export MANPATH=&amp;quot;/usr/local/man:$MANPATH&amp;quot;

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR=&#39;vim&#39;
# else
#   export EDITOR=&#39;mvim&#39;
# fi

# Compilation flags
# export ARCHFLAGS=&amp;quot;-arch x86_64&amp;quot;

# ssh
# export SSH_KEY_PATH=&amp;quot;~/.ssh/rsa_id&amp;quot;

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig=&amp;quot;mate ~/.zshrc&amp;quot;
# alias ohmyzsh=&amp;quot;mate ~/.oh-my-zsh&amp;quot;

# PowerLevel9K theme
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=&amp;quot;&amp;quot;
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=&amp;quot;$ &amp;quot;
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_DISABLE_RPROMPT=true
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(root_indicator ssh user virtualenv anaconda  dir dir_writable  vcs status battery load  time)


alias cls=&#39;clear&#39;
alias gccw=&#39;gcc -Wextra -Werror -Wall&#39;
alias ll=&#39;ls -al&#39;
alias gpp=&#39;g++ -std=c++11 -Wshadow -DDEBUG -Wall&#39;
export PATH=&amp;quot;/usr/local/mysql/bin:$PATH&amp;quot;
export PATH=&amp;quot;/usr/local/opt/openssl/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;vimrc&#34;&gt;.vimrc&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;set theme
set t_Co=256
set background=dark

&amp;quot;set indent linecnt tab backspace
set nu
set tabstop=4
set shiftwidth=4
set ruler
set cursorline
set backspace=indent,eol,start
set nocompatible
filetype indent on

syntax on
set showmatch

&amp;quot;encoding
set encoding=utf-8

&amp;quot;auto complete
inoremap ( ()&amp;lt;LEFT&amp;gt;
inoremap [ []&amp;lt;LEFT&amp;gt;
inoremap { {&amp;lt;CR&amp;gt;}&amp;lt;LEFT&amp;gt;&amp;lt;Esc&amp;gt;O
inoremap &amp;quot; &amp;quot;&amp;quot;&amp;lt;LEFT&amp;gt;
inoremap &#39; &#39;&#39;&amp;lt;LEFT&amp;gt;

&amp;quot;&amp;quot;
&amp;quot;End auto-complete

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>